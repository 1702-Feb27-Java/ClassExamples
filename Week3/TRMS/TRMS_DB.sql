--USERNAME: TRMS_DB
--PASSWORD: admin
-- TODO: Don't need REPORTSTO
----DROP TABLES----
--DROP TABLE EVENT_ATTACH;
--DROP TABLE APP_ATTACH;
--DROP TABLE REIMBS;
--DROP TABLE EVENT_TITLE;
--DROP TABLE GRADE;
--DROP TABLE URGENCY;
--DROP TABLE APP_LEVELS;
--DROP TABLE EMPLOYEES;
--DROP TABLE ROLE;
--DROP TABLE DEPT;
--DROP SEQUENCE REIMB_SEQ;
--DROP SEQUENCE EMPLOYEE_SEQ;
--DROP SEQUENCE GRADE_SEQ;
--DROP SEQUENCE EVENT_TITLE_SEQ;
--/

----CREATE TABLES----

CREATE TABLE REIMBS
(
  REIMB_ID NUMBER NOT NULL,
  EMPLOYEE_ID NUMBER NOT NULL,
  LOCATION VARCHAR2(50) NOT NULL,
  COST NUMBER(12,2) NOT NULL,
  EVENT_TITLE_ID NUMBER,
  EVENT_DATE DATE NOT NULL,
  EVENT_DESC VARCHAR2(250) NOT NULL,
  WORK_JUST VARCHAR2(250) NOT NULL,
  GRADE_ID NUMBER,
  URGENCY_ID NUMBER DEFAULT 1 NOT NULL,
  APP_LEVEL NUMBER DEFAULT 1,
  CONSTRAINT PK_REIMBS PRIMARY KEY (REIMB_ID)
);

CREATE TABLE EVENT_TITLE
(
  EVENT_TITLE_ID NUMBER NOT NULL,
  EVENT_TITLE VARCHAR2(50),
  CONSTRAINT PK_EVENT_TITLE PRIMARY KEY (EVENT_TITLE_ID)
);

CREATE TABLE GRADE
(
  GRADE_ID NUMBER NOT NULL,
  GRADE_FORMAT VARCHAR2(50),
  PASSING_GRADE VARCHAR2(25),
  PRES_REQ NUMBER DEFAULT 0,
  CONSTRAINT PK_GRADE PRIMARY KEY (GRADE_ID)
);

CREATE TABLE APP_LEVELS
(
  APP_LEVEL NUMBER NOT NULL,
  APP_LEVEL_TITLE VARCHAR2(25),
  CONSTRAINT PK_APP_LEVELS PRIMARY KEY (APP_LEVEL)
);

CREATE TABLE URGENCY
(
  URGENCY_ID NUMBER NOT NULL,
  URGENCY_LEVEL VARCHAR2(50),
  CONSTRAINT PK_URGENCY PRIMARY KEY (URGENCY_ID)
);

CREATE TABLE EVENT_ATTACH
(
  EVENT_ATTACH_ID NUMBER NOT NULL,
  REIMB_ID NUMBER NOT NULL,
  EVENT_ATTACH_URL VARCHAR2(50) NOT NULL,
  CONSTRAINT PK_EVENT_ATTACH PRIMARY KEY (EVENT_ATTACH_ID)
);

CREATE TABLE APP_ATTACH
(
  APP_ATTACH_ID NUMBER NOT NULL,
  REIMB_ID NUMBER NOT NULL,
  APP_ATTACH_URL VARCHAR2(50) NOT NULL,
  CONSTRAINT PK_APP_ATTACH PRIMARY KEY (APP_ATTACH_ID)
);

CREATE TABLE EMPLOYEES
(
  EMPLOYEE_ID NUMBER NOT NULL,
  FIRST_NAME VARCHAR2(25) NOT NULL,
  LAST_NAME VARCHAR2(25) NOT NULL,
  USERNAME VARCHAR2(25) NOT NULL UNIQUE,
  PASSWORD VARCHAR2(25) NOT NULL,
  EMAIL VARCHAR2(25) NOT NULL,
  REPORTS_TO NUMBER,
  ROLE_ID NUMBER,
  DEPT_ID NUMBER,
  CONSTRAINT PK_EMPLOYEES PRIMARY KEY (EMPLOYEE_ID)
);

CREATE TABLE ROLE
(
  ROLE_ID NUMBER NOT NULL,
  ROLE VARCHAR2(50),
  CONSTRAINT PK_ROLE PRIMARY KEY (ROLE_ID)
);

CREATE TABLE DEPT
(
  DEPT_ID NUMBER NOT NULL,
  DEPT VARCHAR2(50),
  CONSTRAINT PK_DEPT PRIMARY KEY (DEPT_ID)
);

/
---- CONSTRAINTS ----

ALTER TABLE REIMBS ADD CONSTRAINT FK_EMPLOYEE_ID
  FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID);

ALTER TABLE REIMBS ADD CONSTRAINT FK_EVENT_TITLE_ID
  FOREIGN KEY (EVENT_TITLE_ID) REFERENCES EVENT_TITLE (EVENT_TITLE_ID);

ALTER TABLE REIMBS ADD CONSTRAINT FK_GRADE_ID
  FOREIGN KEY (GRADE_ID) REFERENCES GRADE (GRADE_ID);

ALTER TABLE REIMBS ADD CONSTRAINT FK_URGENCY_ID
  FOREIGN KEY (URGENCY_ID) REFERENCES URGENCY (URGENCY_ID);

ALTER TABLE REIMBS ADD CONSTRAINT FK_APP_ID
  FOREIGN KEY (APP_LEVEL) REFERENCES APP_LEVELS (APP_LEVEL);

ALTER TABLE EVENT_ATTACH ADD CONSTRAINT FK_EVENT_REIMB_ID
  FOREIGN KEY (REIMB_ID) REFERENCES REIMBS (REIMB_ID);

ALTER TABLE APP_ATTACH ADD CONSTRAINT FK_APP_REIMB_ID
  FOREIGN KEY (REIMB_ID) REFERENCES REIMBS (REIMB_ID);

ALTER TABLE EMPLOYEES ADD CONSTRAINT FK_REPORTS_TO
  FOREIGN KEY (REPORTS_TO) REFERENCES EMPLOYEES (EMPLOYEE_ID);

ALTER TABLE EMPLOYEES ADD CONSTRAINT FK_ROLE_ID
  FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID);
  
ALTER TABLE EMPLOYEES ADD CONSTRAINT FK_DEPT_ID
  FOREIGN KEY (DEPT_ID) REFERENCES DEPT (DEPT_ID);


/
---- SEQUENCES/TRIGGERS ----
CREATE SEQUENCE EMPLOYEE_SEQ
  MINVALUE 1
  START WITH    1
  INCREMENT BY  1;
  
CREATE OR REPLACE TRIGGER EMPLOYEE_TRIGGER
  BEFORE INSERT ON EMPLOYEES
  FOR EACH ROW
  BEGIN
    SELECT EMPLOYEE_SEQ.NEXTVAL
    INTO :NEW.EMPLOYEE_ID
    FROM DUAL;
  END;
/

CREATE SEQUENCE REIMB_SEQ
  MINVALUE 1
  START WITH    1
  INCREMENT BY  1;
  
CREATE OR REPLACE TRIGGER REIMB_TRIGGER
  BEFORE INSERT ON REIMBS
  FOR EACH ROW
  BEGIN
    SELECT REIMB_SEQ.NEXTVAL
    INTO :NEW.REIMB_ID
    FROM DUAL;
  END;
/
CREATE SEQUENCE EVENT_TITLE_SEQ
  MINVALUE 1
  START WITH    1
  INCREMENT BY  1;
  
CREATE OR REPLACE TRIGGER EVENT_TITLE_TRIGGER
  BEFORE INSERT ON EVENT_TITLE
  FOR EACH ROW
  BEGIN
    SELECT EVENT_TITLE_SEQ.NEXTVAL
    INTO :NEW.EVENT_TITLE_ID
    FROM DUAL;
  END;
/


CREATE SEQUENCE GRADE_SEQ
  MINVALUE 1
  START WITH    1
  INCREMENT BY  1;
  
CREATE OR REPLACE TRIGGER GRADE_TRIGGER
  BEFORE INSERT ON GRADE
  FOR EACH ROW
  BEGIN
    SELECT GRADE_SEQ.NEXTVAL
    INTO :NEW.GRADE_ID
    FROM DUAL;
  END;
/
---- PRE-LOAD LOOKUP TABLES ----
INSERT INTO ROLE(ROLE_ID, ROLE) VALUES (1, 'Admin');
INSERT INTO ROLE(ROLE_ID, ROLE) VALUES (2, 'Employee');
INSERT INTO ROLE(ROLE_ID, ROLE) VALUES (3, 'Supervisor');
INSERT INTO ROLE(ROLE_ID, ROLE) VALUES (4, 'Department Head');

INSERT INTO GRADE(GRADE_ID, GRADE_FORMAT, PASSING_GRADE) VALUES (1, 'Letter Grade', 'C');
INSERT INTO GRADE(GRADE_ID, GRADE_FORMAT, PASSING_GRADE) VALUES (2, 'Pass/Fail', 'P');

INSERT INTO EVENT_TITLE(EVENT_TITLE_ID, EVENT_TITLE) VALUES(1, 'University Course');
INSERT INTO EVENT_TITLE(EVENT_TITLE_ID, EVENT_TITLE) VALUES(2, 'Seminar');
INSERT INTO EVENT_TITLE(EVENT_TITLE_ID, EVENT_TITLE) VALUES(3, 'Cert. Prep. Class');
INSERT INTO EVENT_TITLE(EVENT_TITLE_ID, EVENT_TITLE) VALUES(4, 'Certification');
INSERT INTO EVENT_TITLE(EVENT_TITLE_ID, EVENT_TITLE) VALUES(5, 'Tech. Training');

INSERT INTO DEPT(DEPT_ID, DEPT) VALUES (1, 'Management');
INSERT INTO DEPT(DEPT_ID, DEPT) VALUES (2, 'Sales');
INSERT INTO DEPT(DEPT_ID, DEPT) VALUES (3, 'Benefits');
INSERT INTO DEPT(DEPT_ID, DEPT) VALUES (4, 'Human Resources');

INSERT INTO URGENCY(URGENCY_ID, URGENCY_LEVEL) VALUES (1, 'Low');
INSERT INTO URGENCY(URGENCY_ID, URGENCY_LEVEL) VALUES (2, 'Medium');
INSERT INTO URGENCY(URGENCY_ID, URGENCY_LEVEL) VALUES (3, 'High');
INSERT INTO URGENCY(URGENCY_ID, URGENCY_LEVEL) VALUES (4, 'Critical');

--Waiting on...
INSERT INTO APP_LEVELS(APP_LEVEL, APP_LEVEL_TITLE) VALUES (1, 'Direct Supervisor');
INSERT INTO APP_LEVELS(APP_LEVEL, APP_LEVEL_TITLE) VALUES (2, 'Department Head');
INSERT INTO APP_LEVELS(APP_LEVEL, APP_LEVEL_TITLE) VALUES (3, 'Benefits Coordinator');
INSERT INTO APP_LEVELS(APP_LEVEL, APP_LEVEL_TITLE) VALUES (4, 'Approved');
INSERT INTO APP_LEVELS(APP_LEVEL, APP_LEVEL_TITLE) VALUES (5, 'Declined');

-- Add Admin
INSERT INTO EMPLOYEES(FIRST_NAME, LAST_NAME, USERNAME, PASSWORD, EMAIL, ROLE_ID, DEPT_ID)
VALUES('Jonathan', 'Lee', 'admin', 'admin', 'genericemail@email.com', 1, 1);

-- Populate BenCo Staff
INSERT INTO EMPLOYEES(FIRST_NAME, LAST_NAME, USERNAME, PASSWORD, EMAIL, ROLE_ID, DEPT_ID)
VALUES('BenCo', 'Head', 'benco1', 'head', 'genericemail1@email.com', 4, 4);
INSERT INTO EMPLOYEES(FIRST_NAME, LAST_NAME, USERNAME, PASSWORD, EMAIL, ROLE_ID, DEPT_ID, REPORTS_TO)
VALUES('BenCo', 'Supervisor', 'benco2', 'supervisor', 'genericemail2@email.com', 3, 4, 2);
INSERT INTO EMPLOYEES(FIRST_NAME, LAST_NAME, USERNAME, PASSWORD, EMAIL, ROLE_ID, DEPT_ID, REPORTS_TO)
VALUES('BenCo', 'Employee', 'benco3', 'employee', 'genericemail3@email.com', 2, 4, 3);

-- Populate Sales Staff
INSERT INTO EMPLOYEES(FIRST_NAME, LAST_NAME, USERNAME, PASSWORD, EMAIL, ROLE_ID, DEPT_ID)
VALUES('Generic', 'Head', 'generic1', 'head', 'genericemail1@email.com', 4, 2);
INSERT INTO EMPLOYEES(FIRST_NAME, LAST_NAME, USERNAME, PASSWORD, EMAIL, ROLE_ID, DEPT_ID, REPORTS_TO)
VALUES('Generic', 'Supervisor', 'generic2', 'supervisor', 'genericemail2@email.com', 3, 2, 5);
INSERT INTO EMPLOYEES(FIRST_NAME, LAST_NAME, USERNAME, PASSWORD, EMAIL, ROLE_ID, DEPT_ID, REPORTS_TO)
VALUES('Generic', 'Employee', 'generic3', 'employee', 'genericemail3@email.com', 2, 2, 6);

--COMMIT;
INSERT INTO REIMBS(EMPLOYEE_ID, EVENT_TITLE_ID, GRADE_ID, LOCATION, COST, EVENT_DATE, EVENT_DESC, WORK_JUST) VALUES (1, 1, 1, 'New York', 19000, '27-FEB-2017', 'Bootcamp Training', 'Entry Level');
--SELECT * FROM REIMBS WHERE EMPLOYEE_REIMB.EMPLOYEE_ID = 1 ORDER BY REIMB_ID ASC;
